[tox]
skipsdist = True
allowlist_externals = python

[testenv]
deps =
    pytest
    pytest-cov  # Añadido para manejar la cobertura de pytest
    coverage
    botocore
    boto3
    pymysql
    requests

setenv =
    AWS_ACCESS_KEY_ID = {env:AWS_ACCESS_KEY_ID}
    AWS_SECRET_ACCESS_KEY = {env:AWS_SECRET_ACCESS_KEY}
    AWS_DEFAULT_REGION = us-east-2
    AWS_SAM_STACK_NAME = cafe-balu
    PYTHONPATH = {toxinidir}  # Añade la raíz del proyecto al PYTHONPATH

commands_pre =
    python -c "import os; assert 'AWS_ACCESS_KEY_ID' in os.environ and os.environ['AWS_ACCESS_KEY_ID'], 'AWS_ACCESS_KEY_ID is not set, exiting.'"
    python -c "import os; assert 'AWS_SECRET_ACCESS_KEY' in os.environ and os.environ['AWS_SECRET_ACCESS_KEY'], 'AWS_SECRET_ACCESS_KEY is not set, exiting.'"

commands =
    #pytest --cov=. --cov-report=xml --cov-report=term tests/unit  # Usa "." para cubrir todo el proyecto
    pytest --cov=cancel_sales/app.py --cov=change_status_category_or_product/app.py --cov=end_of_day_balance/app.py --cov=get_category/app.py --cov=get_low_stock_products/app.py --cov=get_one_product/app.py --cov=get_products/app.py --cov=login/app.py --cov=newPassword/app.py --cov=save_category/app.py --cov=save_product/app.py --cov=save_sale/app.py --cov=top_sold_products/app.py --cov=update_category/app.py --cov=update_product/app.py --cov=view_sales_history_per_day/app.py --cov-report=xml --cov-report=term tests/unit
    coverage xml

[coverage:run]
relative_files = True
source = .
branch = True