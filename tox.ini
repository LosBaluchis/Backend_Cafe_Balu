[tox]
skipsdist = True
allowlist_externals = python

[testenv]
deps =
    pytest
    coverage
    botocore
    boto3
    pymysql
    requests
    sonar-scanner
    
setenv =
    AWS_ACCESS_KEY_ID = {env:AWS_ACCESS_KEY_ID}
    AWS_SECRET_ACCESS_KEY = {env:AWS_SECRET_ACCESS_KEY}
    AWS_DEFAULT_REGION = us-east-2
    AWS_SAM_STACK_NAME = cafe-balu
    SONAR_TOKEN = {env:SONAR_TOKEN}

commands_pre =
    python -c "import os; assert 'AWS_ACCESS_KEY_ID' in os.environ and os.environ['AWS_ACCESS_KEY_ID'], 'AWS_ACCESS_KEY_ID is not set, exiting.'"
    python -c "import os; assert 'AWS_SECRET_ACCESS_KEY' in os.environ and os.environ['AWS_SECRET_ACCESS_KEY'], 'AWS_SECRET_ACCESS_KEY is not set, exiting.'"

commands =
    coverage run -m pytest tests/unit  # Ejecuta solo las pruebas unitarias en tests/unit
    coverage xml
    sonar-scanner -Dsonar.projectKey=LosBaluchis_Backend_Cafe_Balu \
                  -Dsonar.organization=losbaluchis \
                  -Dsonar.python.coverage.reportPaths=coverage.xml \
                  -Dsonar.host.url=https://sonarcloud.io \
                  -Dsonar.login={env:SONAR_TOKEN}  # Usa el token desde las variables de entorno

[coverage:run]
relative_files = True
source = .
branch = True
